   0  $accept : program $end

   1  program : PROG_START stmts PROG_END

   2  stmts : stmt
   3        | stmt stmts

   4  stmt : matched_stmt
   5       | unmatched_stmt

   6  matched_stmts : matched_stmt
   7                | matched_stmt matched_stmts

   8  unmatched_stmts : unmatched_stmt
   9                  | unmatched_stmt unmatched_stmts

  10  unmatched_stmt : IF LP logic_expr RP LB unmatched_stmts RB
  11                 | IF LP logic_expr RP LB matched_stmts RB trial

  12  trial : ELSE LB unmatched_stmts RB
  13        |

  14  matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB
  15               | assign_stmt END_STMT
  16               | input_stmt END_STMT
  17               | output_stmt END_STMT
  18               | func_define
  19               | func_call END_STMT
  20               | read_from_sensor END_STMT
  21               | time_from_timer END_STMT
  22               | connect_stmt END_STMT
  23               | declare_stmt END_STMT
  24               | BREAK END_STMT
  25               | CONTINUE END_STMT
  26               | RETURN END_STMT
  27               | arithmetic_op END_STMT
  28               | COMMENT
  29               | END_STMT
  30               | while_stmt
  31               | for_stmt

  32  func_define : FUNC SPACE IDENTIFIER LP parameters RP LB stmts RB

  33  parameters : parameter
  34             | parameter parameters

  35  parameter : var_type SPACE IDENTIFIER
  36            | EMPTY

  37  func_call : IDENTIFIER LP variables RP

  38  variables : IDENTIFIER
  39            | IDENTIFIER COMMA variables

  40  var_type : INT_TYPE
  41           | FLOAT_TYPE
  42           | STRING_TYPE
  43           | CHAR_TYPE
  44           | BOOL_TYPE
  45           | STATUS_TYPE
  46           | PROTOCOL_TYPE

  47  arithmetic_op : numeric_value
  48                | arithmetic_op PLUS_OP numeric_value
  49                | arithmetic_op MINUS_OP numeric_value

  50  numeric_value : num_value
  51                | numeric_value MULT_OP num_value
  52                | numeric_value DIV_OP num_value

  53  num_value : INT
  54            | FLOAT
  55            | LP arithmetic_op RP

  56  declare_stmt : var_type SPACE IDENTIFIER
  57               | var_type SPACE assign_stmt

  58  assign_stmt : IDENTIFIER ASSIGN_OP IDENTIFIER
  59              | IDENTIFIER ASSIGN_OP num_value
  60              | str_assign
  61              | char_assign
  62              | bool_assign
  63              | status_assign
  64              | protocol_assign

  65  char_assign : IDENTIFIER ASSIGN_OP CHAR

  66  str_assign : IDENTIFIER ASSIGN_OP STRING

  67  bool_assign : IDENTIFIER ASSIGN_OP logic_expr_wout_id

  68  status_assign : IDENTIFIER ASSIGN_OP STATUS

  69  protocol_assign : IDENTIFIER ASSIGN_OP PROTOCOL

  70  while_stmt : WHILE LP logic_expr RP LB stmts RB

  71  for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB

  72  logic_expr_wout_id : logic_operation
  73                     | comparison_operation
  74                     | NOT_OP logic_expr

  75  logic_expr : logic_operation
  76             | comparison_operation
  77             | NOT_OP logic_expr
  78             | IDENTIFIER

  79  logic_operation : logic_value
  80                  | logic_expr OR_OP logic_value

  81  logic_value : bool_factor
  82              | logic_value AND_OP bool_factor

  83  bool_factor : BOOL
  84              | LP comparison_operation RP
  85              | LP logic_operation RP

  86  comparison_operation : num_value comparision_op num_value

  87  comparision_op : LESS_OP
  88                 | GREATER_OP
  89                 | EQUIVALENT_OP
  90                 | GREATER_EQ_OP
  91                 | LESS_EQ_OP
  92                 | NOT_EQ_OP

  93  input_stmt : INPUT LP IDENTIFIER RP

  94  input_from_connection : IDENTIFIER DOT INPUT_FROM_CONNECTION LP IDENTIFIER RP

  95  output_stmt : PRINT LP IDENTIFIER RP

  96  output_to_connection : IDENTIFIER DOT OUTPUT_TO_CONNECTION LP IDENTIFIER RP

  97  read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER RP

  98  time_from_timer : TIME_FROM_TIMER LP IDENTIFIER RP

  99  connect_obj_creation : CONNECTION_CLASS SPACE IDENTIFIER ASSIGN_OP NEW_INST SPACE CONNECTION_CONSTRUCTOR

 100  connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url RP

 101  url : STRING

 102  get_connect_status : IDENTIFIER DOT GET_STATUS_FUNC LP IDENTIFIER RP

 103  get_connect_protocol : IDENTIFIER DOT GET_PROTOCOL_FUNC LP IDENTIFIER RP

 104  get_connect_URL : IDENTIFIER DOT GET_URL_FUNC LP IDENTIFIER RP

 105  turn_switch_on : TURN_SWITCH_ON_FUNC LP SWITCH_NAME RP

 106  turn_switch_off : TURN_SWITCH_OFF_FUNC LP SWITCH_NAME RP

 107  toggle_switch : TOGGLE_SWITCH_FUNC LP SWITCH_NAME RP

 108  get_switch_state : GET_SWITCH_STATE_FUNC LP SWITCH_NAME COMMA IDENTIFIER RP

state 0
	$accept : . program $end  (0)

	PROG_START  shift 1
	.  error

	program  goto 2


state 1
	program : PROG_START . stmts PROG_END  (1)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 27
	stmt  goto 28
	matched_stmt  goto 29
	unmatched_stmt  goto 30
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	num_value : INT .  (53)

	.  reduce 53


state 4
	num_value : FLOAT .  (54)

	.  reduce 54


state 5
	while_stmt : WHILE . LP logic_expr RP LB stmts RB  (70)

	LP  shift 51
	.  error


state 6
	unmatched_stmt : IF . LP logic_expr RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF . LP logic_expr RP LB matched_stmts RB trial  (11)
	matched_stmt : IF . LP logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	LP  shift 52
	.  error


state 7
	matched_stmt : BREAK . END_STMT  (24)

	END_STMT  shift 53
	.  error


state 8
	matched_stmt : CONTINUE . END_STMT  (25)

	END_STMT  shift 54
	.  error


state 9
	matched_stmt : RETURN . END_STMT  (26)

	END_STMT  shift 55
	.  error


state 10
	for_stmt : FOR . LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (71)

	LP  shift 56
	.  error


state 11
	num_value : LP . arithmetic_op RP  (55)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	arithmetic_op  goto 57
	numeric_value  goto 44
	num_value  goto 45


state 12
	matched_stmt : END_STMT .  (29)

	.  reduce 29


state 13
	matched_stmt : COMMENT .  (28)

	.  reduce 28


state 14
	input_stmt : INPUT . LP IDENTIFIER RP  (93)

	LP  shift 58
	.  error


state 15
	output_stmt : PRINT . LP IDENTIFIER RP  (95)

	LP  shift 59
	.  error


state 16
	read_from_sensor : READ_FROM_SENSOR . LP IDENTIFIER COMMA IDENTIFIER RP  (97)

	LP  shift 60
	.  error


state 17
	time_from_timer : TIME_FROM_TIMER . LP IDENTIFIER RP  (98)

	LP  shift 61
	.  error


state 18
	func_define : FUNC . SPACE IDENTIFIER LP parameters RP LB stmts RB  (32)

	SPACE  shift 62
	.  error


state 19
	var_type : INT_TYPE .  (40)

	.  reduce 40


state 20
	var_type : FLOAT_TYPE .  (41)

	.  reduce 41


state 21
	var_type : STRING_TYPE .  (42)

	.  reduce 42


state 22
	var_type : CHAR_TYPE .  (43)

	.  reduce 43


state 23
	var_type : BOOL_TYPE .  (44)

	.  reduce 44


state 24
	var_type : STATUS_TYPE .  (45)

	.  reduce 45


state 25
	var_type : PROTOCOL_TYPE .  (46)

	.  reduce 46


state 26
	func_call : IDENTIFIER . LP variables RP  (37)
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (58)
	assign_stmt : IDENTIFIER . ASSIGN_OP num_value  (59)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (65)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (66)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr_wout_id  (67)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (68)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (69)
	connect_stmt : IDENTIFIER . DOT CONNECT_FUNC LP url RP  (100)

	LP  shift 63
	ASSIGN_OP  shift 64
	DOT  shift 65
	.  error


state 27
	program : PROG_START stmts . PROG_END  (1)

	PROG_END  shift 66
	.  error


state 28
	stmts : stmt .  (2)
	stmts : stmt . stmts  (3)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	RB  reduce 2
	PROG_END  reduce 2

	stmts  goto 67
	stmt  goto 28
	matched_stmt  goto 29
	unmatched_stmt  goto 30
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 29
	stmt : matched_stmt .  (4)

	.  reduce 4


state 30
	stmt : unmatched_stmt .  (5)

	.  reduce 5


state 31
	matched_stmt : assign_stmt . END_STMT  (15)

	END_STMT  shift 68
	.  error


state 32
	matched_stmt : input_stmt . END_STMT  (16)

	END_STMT  shift 69
	.  error


state 33
	matched_stmt : output_stmt . END_STMT  (17)

	END_STMT  shift 70
	.  error


state 34
	matched_stmt : func_define .  (18)

	.  reduce 18


state 35
	matched_stmt : func_call . END_STMT  (19)

	END_STMT  shift 71
	.  error


state 36
	matched_stmt : read_from_sensor . END_STMT  (20)

	END_STMT  shift 72
	.  error


state 37
	matched_stmt : time_from_timer . END_STMT  (21)

	END_STMT  shift 73
	.  error


state 38
	matched_stmt : connect_stmt . END_STMT  (22)

	END_STMT  shift 74
	.  error


state 39
	matched_stmt : declare_stmt . END_STMT  (23)

	END_STMT  shift 75
	.  error


state 40
	matched_stmt : arithmetic_op . END_STMT  (27)
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (48)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (49)

	END_STMT  shift 76
	PLUS_OP  shift 77
	MINUS_OP  shift 78
	.  error


state 41
	matched_stmt : while_stmt .  (30)

	.  reduce 30


state 42
	matched_stmt : for_stmt .  (31)

	.  reduce 31


state 43
	declare_stmt : var_type . SPACE IDENTIFIER  (56)
	declare_stmt : var_type . SPACE assign_stmt  (57)

	SPACE  shift 79
	.  error


state 44
	arithmetic_op : numeric_value .  (47)
	numeric_value : numeric_value . MULT_OP num_value  (51)
	numeric_value : numeric_value . DIV_OP num_value  (52)

	DIV_OP  shift 80
	MULT_OP  shift 81
	RP  reduce 47
	END_STMT  reduce 47
	PLUS_OP  reduce 47
	MINUS_OP  reduce 47


state 45
	numeric_value : num_value .  (50)

	.  reduce 50


state 46
	assign_stmt : str_assign .  (60)

	.  reduce 60


state 47
	assign_stmt : char_assign .  (61)

	.  reduce 61


state 48
	assign_stmt : bool_assign .  (62)

	.  reduce 62


state 49
	assign_stmt : status_assign .  (63)

	.  reduce 63


state 50
	assign_stmt : protocol_assign .  (64)

	.  reduce 64


state 51
	while_stmt : WHILE LP . logic_expr RP LB stmts RB  (70)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 86
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 52
	unmatched_stmt : IF LP . logic_expr RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP . logic_expr RP LB matched_stmts RB trial  (11)
	matched_stmt : IF LP . logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 92
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 53
	matched_stmt : BREAK END_STMT .  (24)

	.  reduce 24


state 54
	matched_stmt : CONTINUE END_STMT .  (25)

	.  reduce 25


state 55
	matched_stmt : RETURN END_STMT .  (26)

	.  reduce 26


state 56
	for_stmt : FOR LP . declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (71)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	.  error

	declare_stmt  goto 93
	var_type  goto 43


state 57
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (48)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (49)
	num_value : LP arithmetic_op . RP  (55)

	RP  shift 94
	PLUS_OP  shift 77
	MINUS_OP  shift 78
	.  error


state 58
	input_stmt : INPUT LP . IDENTIFIER RP  (93)

	IDENTIFIER  shift 95
	.  error


state 59
	output_stmt : PRINT LP . IDENTIFIER RP  (95)

	IDENTIFIER  shift 96
	.  error


state 60
	read_from_sensor : READ_FROM_SENSOR LP . IDENTIFIER COMMA IDENTIFIER RP  (97)

	IDENTIFIER  shift 97
	.  error


state 61
	time_from_timer : TIME_FROM_TIMER LP . IDENTIFIER RP  (98)

	IDENTIFIER  shift 98
	.  error


state 62
	func_define : FUNC SPACE . IDENTIFIER LP parameters RP LB stmts RB  (32)

	IDENTIFIER  shift 99
	.  error


state 63
	func_call : IDENTIFIER LP . variables RP  (37)

	IDENTIFIER  shift 100
	.  error

	variables  goto 101


state 64
	assign_stmt : IDENTIFIER ASSIGN_OP . IDENTIFIER  (58)
	assign_stmt : IDENTIFIER ASSIGN_OP . num_value  (59)
	char_assign : IDENTIFIER ASSIGN_OP . CHAR  (65)
	str_assign : IDENTIFIER ASSIGN_OP . STRING  (66)
	bool_assign : IDENTIFIER ASSIGN_OP . logic_expr_wout_id  (67)
	status_assign : IDENTIFIER ASSIGN_OP . STATUS  (68)
	protocol_assign : IDENTIFIER ASSIGN_OP . PROTOCOL  (69)

	INT  shift 3
	FLOAT  shift 4
	CHAR  shift 102
	BOOL  shift 82
	STRING  shift 103
	STATUS  shift 104
	PROTOCOL  shift 105
	LP  shift 83
	NOT_OP  shift 106
	IDENTIFIER  shift 107
	.  error

	logic_expr  goto 108
	num_value  goto 109
	logic_expr_wout_id  goto 110
	logic_operation  goto 111
	comparison_operation  goto 112
	logic_value  goto 90
	bool_factor  goto 91


state 65
	connect_stmt : IDENTIFIER DOT . CONNECT_FUNC LP url RP  (100)

	CONNECT_FUNC  shift 113
	.  error


state 66
	program : PROG_START stmts PROG_END .  (1)

	.  reduce 1


state 67
	stmts : stmt stmts .  (3)

	.  reduce 3


state 68
	matched_stmt : assign_stmt END_STMT .  (15)

	.  reduce 15


state 69
	matched_stmt : input_stmt END_STMT .  (16)

	.  reduce 16


state 70
	matched_stmt : output_stmt END_STMT .  (17)

	.  reduce 17


state 71
	matched_stmt : func_call END_STMT .  (19)

	.  reduce 19


state 72
	matched_stmt : read_from_sensor END_STMT .  (20)

	.  reduce 20


state 73
	matched_stmt : time_from_timer END_STMT .  (21)

	.  reduce 21


state 74
	matched_stmt : connect_stmt END_STMT .  (22)

	.  reduce 22


state 75
	matched_stmt : declare_stmt END_STMT .  (23)

	.  reduce 23


state 76
	matched_stmt : arithmetic_op END_STMT .  (27)

	.  reduce 27


state 77
	arithmetic_op : arithmetic_op PLUS_OP . numeric_value  (48)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	numeric_value  goto 114
	num_value  goto 45


state 78
	arithmetic_op : arithmetic_op MINUS_OP . numeric_value  (49)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	numeric_value  goto 115
	num_value  goto 45


state 79
	declare_stmt : var_type SPACE . IDENTIFIER  (56)
	declare_stmt : var_type SPACE . assign_stmt  (57)

	IDENTIFIER  shift 116
	.  error

	assign_stmt  goto 117
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 80
	numeric_value : numeric_value DIV_OP . num_value  (52)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	num_value  goto 118


state 81
	numeric_value : numeric_value MULT_OP . num_value  (51)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	num_value  goto 119


state 82
	bool_factor : BOOL .  (83)

	.  reduce 83


state 83
	num_value : LP . arithmetic_op RP  (55)
	bool_factor : LP . comparison_operation RP  (84)
	bool_factor : LP . logic_operation RP  (85)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 108
	arithmetic_op  goto 57
	numeric_value  goto 44
	num_value  goto 120
	logic_operation  goto 121
	comparison_operation  goto 122
	logic_value  goto 90
	bool_factor  goto 91


state 84
	logic_expr : NOT_OP . logic_expr  (77)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 123
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 85
	logic_expr : IDENTIFIER .  (78)

	.  reduce 78


state 86
	while_stmt : WHILE LP logic_expr . RP LB stmts RB  (70)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	RP  shift 124
	OR_OP  shift 125
	.  error


state 87
	comparison_operation : num_value . comparision_op num_value  (86)

	NOT_EQ_OP  shift 126
	EQUIVALENT_OP  shift 127
	LESS_OP  shift 128
	GREATER_OP  shift 129
	LESS_EQ_OP  shift 130
	GREATER_EQ_OP  shift 131
	.  error

	comparision_op  goto 132


state 88
	logic_expr : logic_operation .  (75)

	.  reduce 75


state 89
	logic_expr : comparison_operation .  (76)

	.  reduce 76


state 90
	logic_operation : logic_value .  (79)
	logic_value : logic_value . AND_OP bool_factor  (82)

	AND_OP  shift 133
	RP  reduce 79
	END_STMT  reduce 79
	OR_OP  reduce 79


state 91
	logic_value : bool_factor .  (81)

	.  reduce 81


state 92
	unmatched_stmt : IF LP logic_expr . RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr . RP LB matched_stmts RB trial  (11)
	matched_stmt : IF LP logic_expr . RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	RP  shift 134
	OR_OP  shift 125
	.  error


state 93
	for_stmt : FOR LP declare_stmt . END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (71)

	END_STMT  shift 135
	.  error


state 94
	num_value : LP arithmetic_op RP .  (55)

	.  reduce 55


state 95
	input_stmt : INPUT LP IDENTIFIER . RP  (93)

	RP  shift 136
	.  error


state 96
	output_stmt : PRINT LP IDENTIFIER . RP  (95)

	RP  shift 137
	.  error


state 97
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER . COMMA IDENTIFIER RP  (97)

	COMMA  shift 138
	.  error


state 98
	time_from_timer : TIME_FROM_TIMER LP IDENTIFIER . RP  (98)

	RP  shift 139
	.  error


state 99
	func_define : FUNC SPACE IDENTIFIER . LP parameters RP LB stmts RB  (32)

	LP  shift 140
	.  error


state 100
	variables : IDENTIFIER .  (38)
	variables : IDENTIFIER . COMMA variables  (39)

	COMMA  shift 141
	RP  reduce 38


state 101
	func_call : IDENTIFIER LP variables . RP  (37)

	RP  shift 142
	.  error


state 102
	char_assign : IDENTIFIER ASSIGN_OP CHAR .  (65)

	.  reduce 65


state 103
	str_assign : IDENTIFIER ASSIGN_OP STRING .  (66)

	.  reduce 66


state 104
	status_assign : IDENTIFIER ASSIGN_OP STATUS .  (68)

	.  reduce 68


state 105
	protocol_assign : IDENTIFIER ASSIGN_OP PROTOCOL .  (69)

	.  reduce 69


state 106
	logic_expr_wout_id : NOT_OP . logic_expr  (74)
	logic_expr : NOT_OP . logic_expr  (77)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 143
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 107
	assign_stmt : IDENTIFIER ASSIGN_OP IDENTIFIER .  (58)
	logic_expr : IDENTIFIER .  (78)

	RP  reduce 58
	END_STMT  reduce 58
	OR_OP  reduce 78


state 108
	logic_operation : logic_expr . OR_OP logic_value  (80)

	OR_OP  shift 125
	.  error


state 109
	assign_stmt : IDENTIFIER ASSIGN_OP num_value .  (59)
	comparison_operation : num_value . comparision_op num_value  (86)

	NOT_EQ_OP  shift 126
	EQUIVALENT_OP  shift 127
	LESS_OP  shift 128
	GREATER_OP  shift 129
	LESS_EQ_OP  shift 130
	GREATER_EQ_OP  shift 131
	RP  reduce 59
	END_STMT  reduce 59

	comparision_op  goto 132


state 110
	bool_assign : IDENTIFIER ASSIGN_OP logic_expr_wout_id .  (67)

	.  reduce 67


state 111
	logic_expr_wout_id : logic_operation .  (72)
	logic_expr : logic_operation .  (75)

	RP  reduce 72
	END_STMT  reduce 72
	OR_OP  reduce 75


state 112
	logic_expr_wout_id : comparison_operation .  (73)
	logic_expr : comparison_operation .  (76)

	RP  reduce 73
	END_STMT  reduce 73
	OR_OP  reduce 76


state 113
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC . LP url RP  (100)

	LP  shift 144
	.  error


state 114
	arithmetic_op : arithmetic_op PLUS_OP numeric_value .  (48)
	numeric_value : numeric_value . MULT_OP num_value  (51)
	numeric_value : numeric_value . DIV_OP num_value  (52)

	DIV_OP  shift 80
	MULT_OP  shift 81
	RP  reduce 48
	END_STMT  reduce 48
	PLUS_OP  reduce 48
	MINUS_OP  reduce 48


state 115
	arithmetic_op : arithmetic_op MINUS_OP numeric_value .  (49)
	numeric_value : numeric_value . MULT_OP num_value  (51)
	numeric_value : numeric_value . DIV_OP num_value  (52)

	DIV_OP  shift 80
	MULT_OP  shift 81
	RP  reduce 49
	END_STMT  reduce 49
	PLUS_OP  reduce 49
	MINUS_OP  reduce 49


state 116
	declare_stmt : var_type SPACE IDENTIFIER .  (56)
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (58)
	assign_stmt : IDENTIFIER . ASSIGN_OP num_value  (59)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (65)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (66)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr_wout_id  (67)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (68)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (69)

	ASSIGN_OP  shift 64
	END_STMT  reduce 56


state 117
	declare_stmt : var_type SPACE assign_stmt .  (57)

	.  reduce 57


state 118
	numeric_value : numeric_value DIV_OP num_value .  (52)

	.  reduce 52


state 119
	numeric_value : numeric_value MULT_OP num_value .  (51)

	.  reduce 51


state 120
	numeric_value : num_value .  (50)
	comparison_operation : num_value . comparision_op num_value  (86)

	NOT_EQ_OP  shift 126
	EQUIVALENT_OP  shift 127
	LESS_OP  shift 128
	GREATER_OP  shift 129
	LESS_EQ_OP  shift 130
	GREATER_EQ_OP  shift 131
	RP  reduce 50
	DIV_OP  reduce 50
	MULT_OP  reduce 50
	PLUS_OP  reduce 50
	MINUS_OP  reduce 50

	comparision_op  goto 132


state 121
	logic_expr : logic_operation .  (75)
	bool_factor : LP logic_operation . RP  (85)

	RP  shift 145
	OR_OP  reduce 75


state 122
	logic_expr : comparison_operation .  (76)
	bool_factor : LP comparison_operation . RP  (84)

	RP  shift 146
	OR_OP  reduce 76


123: shift/reduce conflict (shift 125, reduce 77) on OR_OP
state 123
	logic_expr : NOT_OP logic_expr .  (77)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	OR_OP  shift 125
	RP  reduce 77
	END_STMT  reduce 77


state 124
	while_stmt : WHILE LP logic_expr RP . LB stmts RB  (70)

	LB  shift 147
	.  error


state 125
	logic_operation : logic_expr OR_OP . logic_value  (80)

	BOOL  shift 82
	LP  shift 148
	.  error

	logic_value  goto 149
	bool_factor  goto 91


state 126
	comparision_op : NOT_EQ_OP .  (92)

	.  reduce 92


state 127
	comparision_op : EQUIVALENT_OP .  (89)

	.  reduce 89


state 128
	comparision_op : LESS_OP .  (87)

	.  reduce 87


state 129
	comparision_op : GREATER_OP .  (88)

	.  reduce 88


state 130
	comparision_op : LESS_EQ_OP .  (91)

	.  reduce 91


state 131
	comparision_op : GREATER_EQ_OP .  (90)

	.  reduce 90


state 132
	comparison_operation : num_value comparision_op . num_value  (86)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	.  error

	num_value  goto 150


state 133
	logic_value : logic_value AND_OP . bool_factor  (82)

	BOOL  shift 82
	LP  shift 148
	.  error

	bool_factor  goto 151


state 134
	unmatched_stmt : IF LP logic_expr RP . LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr RP . LB matched_stmts RB trial  (11)
	matched_stmt : IF LP logic_expr RP . LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	LB  shift 152
	.  error


state 135
	for_stmt : FOR LP declare_stmt END_STMT . logic_expr END_STMT assign_stmt RP LB stmts RB  (71)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 153
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 136
	input_stmt : INPUT LP IDENTIFIER RP .  (93)

	.  reduce 93


state 137
	output_stmt : PRINT LP IDENTIFIER RP .  (95)

	.  reduce 95


state 138
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA . IDENTIFIER RP  (97)

	IDENTIFIER  shift 154
	.  error


state 139
	time_from_timer : TIME_FROM_TIMER LP IDENTIFIER RP .  (98)

	.  reduce 98


state 140
	func_define : FUNC SPACE IDENTIFIER LP . parameters RP LB stmts RB  (32)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	EMPTY  shift 155
	.  error

	parameters  goto 156
	parameter  goto 157
	var_type  goto 158


state 141
	variables : IDENTIFIER COMMA . variables  (39)

	IDENTIFIER  shift 100
	.  error

	variables  goto 159


state 142
	func_call : IDENTIFIER LP variables RP .  (37)

	.  reduce 37


143: shift/reduce conflict (shift 125, reduce 77) on OR_OP
state 143
	logic_expr_wout_id : NOT_OP logic_expr .  (74)
	logic_expr : NOT_OP logic_expr .  (77)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	OR_OP  shift 125
	RP  reduce 74
	END_STMT  reduce 74


state 144
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP . url RP  (100)

	STRING  shift 160
	.  error

	url  goto 161


state 145
	bool_factor : LP logic_operation RP .  (85)

	.  reduce 85


state 146
	bool_factor : LP comparison_operation RP .  (84)

	.  reduce 84


state 147
	while_stmt : WHILE LP logic_expr RP LB . stmts RB  (70)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 162
	stmt  goto 28
	matched_stmt  goto 29
	unmatched_stmt  goto 30
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 148
	bool_factor : LP . comparison_operation RP  (84)
	bool_factor : LP . logic_operation RP  (85)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 108
	num_value  goto 87
	logic_operation  goto 121
	comparison_operation  goto 122
	logic_value  goto 90
	bool_factor  goto 91


state 149
	logic_operation : logic_expr OR_OP logic_value .  (80)
	logic_value : logic_value . AND_OP bool_factor  (82)

	AND_OP  shift 133
	RP  reduce 80
	END_STMT  reduce 80
	OR_OP  reduce 80


state 150
	comparison_operation : num_value comparision_op num_value .  (86)

	.  reduce 86


state 151
	logic_value : logic_value AND_OP bool_factor .  (82)

	.  reduce 82


state 152
	unmatched_stmt : IF LP logic_expr RP LB . unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr RP LB . matched_stmts RB trial  (11)
	matched_stmt : IF LP logic_expr RP LB . matched_stmts RB ELSE LB matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	matched_stmt  goto 163
	unmatched_stmt  goto 164
	matched_stmts  goto 165
	unmatched_stmts  goto 166
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 153
	for_stmt : FOR LP declare_stmt END_STMT logic_expr . END_STMT assign_stmt RP LB stmts RB  (71)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	END_STMT  shift 167
	OR_OP  shift 125
	.  error


state 154
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER . RP  (97)

	RP  shift 168
	.  error


state 155
	parameter : EMPTY .  (36)

	.  reduce 36


state 156
	func_define : FUNC SPACE IDENTIFIER LP parameters . RP LB stmts RB  (32)

	RP  shift 169
	.  error


state 157
	parameters : parameter .  (33)
	parameters : parameter . parameters  (34)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	EMPTY  shift 155
	RP  reduce 33

	parameters  goto 170
	parameter  goto 157
	var_type  goto 158


state 158
	parameter : var_type . SPACE IDENTIFIER  (35)

	SPACE  shift 171
	.  error


state 159
	variables : IDENTIFIER COMMA variables .  (39)

	.  reduce 39


state 160
	url : STRING .  (101)

	.  reduce 101


state 161
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url . RP  (100)

	RP  shift 172
	.  error


state 162
	while_stmt : WHILE LP logic_expr RP LB stmts . RB  (70)

	RB  shift 173
	.  error


state 163
	matched_stmts : matched_stmt .  (6)
	matched_stmts : matched_stmt . matched_stmts  (7)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 174
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	RB  reduce 6

	matched_stmt  goto 163
	matched_stmts  goto 175
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 164
	unmatched_stmts : unmatched_stmt .  (8)
	unmatched_stmts : unmatched_stmt . unmatched_stmts  (9)

	IF  shift 176
	RB  reduce 8

	unmatched_stmt  goto 164
	unmatched_stmts  goto 177


state 165
	unmatched_stmt : IF LP logic_expr RP LB matched_stmts . RB trial  (11)
	matched_stmt : IF LP logic_expr RP LB matched_stmts . RB ELSE LB matched_stmts RB  (14)

	RB  shift 178
	.  error


state 166
	unmatched_stmt : IF LP logic_expr RP LB unmatched_stmts . RB  (10)

	RB  shift 179
	.  error


state 167
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT . assign_stmt RP LB stmts RB  (71)

	IDENTIFIER  shift 180
	.  error

	assign_stmt  goto 181
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 168
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER RP .  (97)

	.  reduce 97


state 169
	func_define : FUNC SPACE IDENTIFIER LP parameters RP . LB stmts RB  (32)

	LB  shift 182
	.  error


state 170
	parameters : parameter parameters .  (34)

	.  reduce 34


state 171
	parameter : var_type SPACE . IDENTIFIER  (35)

	IDENTIFIER  shift 183
	.  error


state 172
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url RP .  (100)

	.  reduce 100


state 173
	while_stmt : WHILE LP logic_expr RP LB stmts RB .  (70)

	.  reduce 70


state 174
	matched_stmt : IF . LP logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	LP  shift 184
	.  error


state 175
	matched_stmts : matched_stmt matched_stmts .  (7)

	.  reduce 7


state 176
	unmatched_stmt : IF . LP logic_expr RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF . LP logic_expr RP LB matched_stmts RB trial  (11)

	LP  shift 185
	.  error


state 177
	unmatched_stmts : unmatched_stmt unmatched_stmts .  (9)

	.  reduce 9


state 178
	unmatched_stmt : IF LP logic_expr RP LB matched_stmts RB . trial  (11)
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB . ELSE LB matched_stmts RB  (14)
	trial : .  (13)

	ELSE  shift 186
	INT  reduce 13
	FLOAT  reduce 13
	WHILE  reduce 13
	IF  reduce 13
	BREAK  reduce 13
	CONTINUE  reduce 13
	RETURN  reduce 13
	FOR  reduce 13
	RB  reduce 13
	LP  reduce 13
	END_STMT  reduce 13
	COMMENT  reduce 13
	INPUT  reduce 13
	PRINT  reduce 13
	READ_FROM_SENSOR  reduce 13
	TIME_FROM_TIMER  reduce 13
	FUNC  reduce 13
	INT_TYPE  reduce 13
	FLOAT_TYPE  reduce 13
	STRING_TYPE  reduce 13
	CHAR_TYPE  reduce 13
	BOOL_TYPE  reduce 13
	STATUS_TYPE  reduce 13
	PROTOCOL_TYPE  reduce 13
	PROG_END  reduce 13
	IDENTIFIER  reduce 13

	trial  goto 187


state 179
	unmatched_stmt : IF LP logic_expr RP LB unmatched_stmts RB .  (10)

	.  reduce 10


state 180
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (58)
	assign_stmt : IDENTIFIER . ASSIGN_OP num_value  (59)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (65)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (66)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr_wout_id  (67)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (68)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (69)

	ASSIGN_OP  shift 64
	.  error


state 181
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt . RP LB stmts RB  (71)

	RP  shift 188
	.  error


state 182
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB . stmts RB  (32)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 189
	stmt  goto 28
	matched_stmt  goto 29
	unmatched_stmt  goto 30
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 183
	parameter : var_type SPACE IDENTIFIER .  (35)

	.  reduce 35


state 184
	matched_stmt : IF LP . logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 190
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 185
	unmatched_stmt : IF LP . logic_expr RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP . logic_expr RP LB matched_stmts RB trial  (11)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 82
	LP  shift 83
	NOT_OP  shift 84
	IDENTIFIER  shift 85
	.  error

	logic_expr  goto 191
	num_value  goto 87
	logic_operation  goto 88
	comparison_operation  goto 89
	logic_value  goto 90
	bool_factor  goto 91


state 186
	trial : ELSE . LB unmatched_stmts RB  (12)
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE . LB matched_stmts RB  (14)

	LB  shift 192
	.  error


state 187
	unmatched_stmt : IF LP logic_expr RP LB matched_stmts RB trial .  (11)

	.  reduce 11


state 188
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP . LB stmts RB  (71)

	LB  shift 193
	.  error


state 189
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB stmts . RB  (32)

	RB  shift 194
	.  error


state 190
	matched_stmt : IF LP logic_expr . RP LB matched_stmts RB ELSE LB matched_stmts RB  (14)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	RP  shift 195
	OR_OP  shift 125
	.  error


state 191
	unmatched_stmt : IF LP logic_expr . RP LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr . RP LB matched_stmts RB trial  (11)
	logic_operation : logic_expr . OR_OP logic_value  (80)

	RP  shift 196
	OR_OP  shift 125
	.  error


state 192
	trial : ELSE LB . unmatched_stmts RB  (12)
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE LB . matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	matched_stmt  goto 163
	unmatched_stmt  goto 164
	matched_stmts  goto 197
	unmatched_stmts  goto 198
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 193
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB . stmts RB  (71)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 199
	stmt  goto 28
	matched_stmt  goto 29
	unmatched_stmt  goto 30
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 194
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB stmts RB .  (32)

	.  reduce 32


state 195
	matched_stmt : IF LP logic_expr RP . LB matched_stmts RB ELSE LB matched_stmts RB  (14)

	LB  shift 200
	.  error


state 196
	unmatched_stmt : IF LP logic_expr RP . LB unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr RP . LB matched_stmts RB trial  (11)

	LB  shift 201
	.  error


state 197
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE LB matched_stmts . RB  (14)

	RB  shift 202
	.  error


state 198
	trial : ELSE LB unmatched_stmts . RB  (12)

	RB  shift 203
	.  error


state 199
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts . RB  (71)

	RB  shift 204
	.  error


state 200
	matched_stmt : IF LP logic_expr RP LB . matched_stmts RB ELSE LB matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 174
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	matched_stmt  goto 163
	matched_stmts  goto 205
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 201
	unmatched_stmt : IF LP logic_expr RP LB . unmatched_stmts RB  (10)
	unmatched_stmt : IF LP logic_expr RP LB . matched_stmts RB trial  (11)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	matched_stmt  goto 163
	unmatched_stmt  goto 164
	matched_stmts  goto 206
	unmatched_stmts  goto 166
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 202
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE LB matched_stmts RB .  (14)

	.  reduce 14


state 203
	trial : ELSE LB unmatched_stmts RB .  (12)

	.  reduce 12


state 204
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB .  (71)

	.  reduce 71


state 205
	matched_stmt : IF LP logic_expr RP LB matched_stmts . RB ELSE LB matched_stmts RB  (14)

	RB  shift 207
	.  error


state 206
	unmatched_stmt : IF LP logic_expr RP LB matched_stmts . RB trial  (11)

	RB  shift 208
	.  error


state 207
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB . ELSE LB matched_stmts RB  (14)

	ELSE  shift 209
	.  error


state 208
	unmatched_stmt : IF LP logic_expr RP LB matched_stmts RB . trial  (11)
	trial : .  (13)

	ELSE  shift 210
	IF  reduce 13
	RB  reduce 13

	trial  goto 187


state 209
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE . LB matched_stmts RB  (14)

	LB  shift 211
	.  error


state 210
	trial : ELSE . LB unmatched_stmts RB  (12)

	LB  shift 212
	.  error


state 211
	matched_stmt : IF LP logic_expr RP LB matched_stmts RB ELSE LB . matched_stmts RB  (14)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 174
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	matched_stmt  goto 163
	matched_stmts  goto 197
	assign_stmt  goto 31
	input_stmt  goto 32
	output_stmt  goto 33
	func_define  goto 34
	func_call  goto 35
	read_from_sensor  goto 36
	time_from_timer  goto 37
	connect_stmt  goto 38
	declare_stmt  goto 39
	arithmetic_op  goto 40
	while_stmt  goto 41
	for_stmt  goto 42
	var_type  goto 43
	numeric_value  goto 44
	num_value  goto 45
	str_assign  goto 46
	char_assign  goto 47
	bool_assign  goto 48
	status_assign  goto 49
	protocol_assign  goto 50


state 212
	trial : ELSE LB . unmatched_stmts RB  (12)

	IF  shift 176
	.  error

	unmatched_stmt  goto 164
	unmatched_stmts  goto 198


Rules never reduced:
	input_from_connection : IDENTIFIER DOT INPUT_FROM_CONNECTION LP IDENTIFIER RP  (94)
	output_to_connection : IDENTIFIER DOT OUTPUT_TO_CONNECTION LP IDENTIFIER RP  (96)
	connect_obj_creation : CONNECTION_CLASS SPACE IDENTIFIER ASSIGN_OP NEW_INST SPACE CONNECTION_CONSTRUCTOR  (99)
	get_connect_status : IDENTIFIER DOT GET_STATUS_FUNC LP IDENTIFIER RP  (102)
	get_connect_protocol : IDENTIFIER DOT GET_PROTOCOL_FUNC LP IDENTIFIER RP  (103)
	get_connect_URL : IDENTIFIER DOT GET_URL_FUNC LP IDENTIFIER RP  (104)
	turn_switch_on : TURN_SWITCH_ON_FUNC LP SWITCH_NAME RP  (105)
	turn_switch_off : TURN_SWITCH_OFF_FUNC LP SWITCH_NAME RP  (106)
	toggle_switch : TOGGLE_SWITCH_FUNC LP SWITCH_NAME RP  (107)
	get_switch_state : GET_SWITCH_STATE_FUNC LP SWITCH_NAME COMMA IDENTIFIER RP  (108)


State 123 contains 1 shift/reduce conflict.
State 143 contains 1 shift/reduce conflict.


69 terminals, 50 nonterminals
109 grammar rules, 213 states
