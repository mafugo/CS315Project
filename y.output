   0  $accept : program $end

   1  program : PROG_START stmts PROG_END

   2  stmts : stmt
   3        | stmt stmts

   4  stmt : if_stmt
   5       | non_if_stmt

   6  if_stmt : matched_stmt
   7          | unmatched_stmt

   8  non_if_stmt : assign_stmt END_STMT
   9              | input_stmt END_STMT
  10              | output_stmt END_STMT
  11              | func_define
  12              | func_call END_STMT
  13              | read_from_sensor END_STMT
  14              | time_from_timer END_STMT
  15              | connect_stmt END_STMT
  16              | declare_stmt END_STMT
  17              | BREAK END_STMT
  18              | CONTINUE END_STMT
  19              | RETURN END_STMT
  20              | arithmetic_op END_STMT
  21              | COMMENT
  22              | END_STMT
  23              | while_stmt
  24              | for_stmt

  25  func_define : FUNC SPACE IDENTIFIER LP parameters RP LB func_body RB

  26  parameters : parameter
  27             | parameter parameters

  28  parameter :
  29            | var_type SPACE IDENTIFIER

  30  func_body : RETURN END_STMT
  31            | stmts

  32  func_call : IDENTIFIER LP variables RP

  33  variables : IDENTIFIER
  34            | IDENTIFIER COMMA variables

  35  var_type : INT_TYPE
  36           | FLOAT_TYPE
  37           | STRING_TYPE
  38           | CHAR_TYPE
  39           | BOOL_TYPE
  40           | STATUS_TYPE
  41           | PROTOCOL_TYPE

  42  arithmetic_op : numeric_value
  43                | arithmetic_op PLUS_OP numeric_value
  44                | arithmetic_op MINUS_OP numeric_value

  45  numeric_value : factor
  46                | numeric_value MULT_OP factor
  47                | numeric_value DIV_OP factor

  48  factor : INT
  49         | FLOAT
  50         | IDENTIFIER
  51         | LP arithmetic_op RP

  52  declare_stmt : var_type SPACE IDENTIFIER
  53               | var_type SPACE assign_stmt

  54  assign_stmt : IDENTIFIER ASSIGN_OP IDENTIFIER
  55              | int_assign
  56              | float_assign
  57              | str_assign
  58              | char_assign
  59              | bool_assign
  60              | status_assign
  61              | protocol_assign

  62  int_assign : IDENTIFIER ASSIGN_OP num_value

  63  float_assign : IDENTIFIER ASSIGN_OP num_value

  64  char_assign : IDENTIFIER ASSIGN_OP CHAR

  65  str_assign : IDENTIFIER ASSIGN_OP STRING

  66  bool_assign : IDENTIFIER ASSIGN_OP logic_expr

  67  status_assign : IDENTIFIER ASSIGN_OP STATUS

  68  protocol_assign : IDENTIFIER ASSIGN_OP PROTOCOL

  69  num_value : INT
  70            | FLOAT
  71            | arithmetic_op
  72            | CHAR

  73  matched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB matched_stmt RB
  74               | non_if_stmt

  75  unmatched_stmt : IF LP logic_expr RP LB stmts RB
  76                 | IF LP logic_expr RP LB matched_stmt RB ELSE LB unmatched_stmt RB

  77  while_stmt : WHILE LP logic_expr RP LB stmts RB

  78  for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB

  79  logic_expr : BOOL
  80             | logic_operation
  81             | comparison_operation
  82             | NOT_OP logic_expr

  83  logic_operation : logic_value
  84                  | logic_expr OR_OP logic_value

  85  logic_value : bool_factor
  86              | logic_value AND_OP bool_factor

  87  bool_factor : BOOL
  88              | IDENTIFIER
  89              | LP comparison_operation RP
  90              | LP logic_operation RP

  91  comparable : IDENTIFIER
  92             | num_value

  93  comparison_operation : comparable comparision_op comparable

  94  comparision_op : LESS_OP
  95                 | GREATER_OP
  96                 | EQUIVALENT_OP
  97                 | GREATER_EQ_OP
  98                 | LESS_EQ_OP
  99                 | NOT_EQ_OP

 100  input_stmt : INPUT LP IDENTIFIER RP

 101  input_from_connection : IDENTIFIER DOT INPUT_FROM_CONNECTION LP IDENTIFIER RP

 102  output_stmt : PRINT LP IDENTIFIER RP

 103  output_to_connection : IDENTIFIER DOT OUTPUT_TO_CONNECTION LP IDENTIFIER RP

 104  read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER RP

 105  time_from_timer : TIME_FROM_TIMER LP IDENTIFIER RP

 106  connect_obj_creation : CONNECTION_CLASS SPACE IDENTIFIER ASSIGN_OP NEW_INST SPACE CONNECTION_CONSTRUCTOR

 107  connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url RP

 108  url : STRING

 109  get_connect_status : IDENTIFIER DOT GET_STATUS_FUNC LP IDENTIFIER RP

 110  get_connect_protocol : IDENTIFIER DOT GET_PROTOCOL_FUNC LP IDENTIFIER RP

 111  get_connect_URL : IDENTIFIER DOT GET_URL_FUNC LP IDENTIFIER RP

 112  turn_switch_on : TURN_SWITCH_ON_FUNC LP SWITCH_NAME RP

 113  turn_switch_off : TURN_SWITCH_OFF_FUNC LP SWITCH_NAME RP

 114  toggle_switch : TOGGLE_SWITCH_FUNC LP SWITCH_NAME RP

 115  get_switch_state : GET_SWITCH_STATE_FUNC LP SWITCH_NAME COMMA IDENTIFIER RP

state 0
	$accept : . program $end  (0)

	PROG_START  shift 1
	.  error

	program  goto 2


state 1
	program : PROG_START . stmts PROG_END  (1)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 27
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 31
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	factor : INT .  (48)

	.  reduce 48


state 4
	factor : FLOAT .  (49)

	.  reduce 49


state 5
	while_stmt : WHILE . LP logic_expr RP LB stmts RB  (77)

	LP  shift 55
	.  error


state 6
	matched_stmt : IF . LP logic_expr RP LB matched_stmt RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF . LP logic_expr RP LB stmts RB  (75)
	unmatched_stmt : IF . LP logic_expr RP LB matched_stmt RB ELSE LB unmatched_stmt RB  (76)

	LP  shift 56
	.  error


state 7
	non_if_stmt : BREAK . END_STMT  (17)

	END_STMT  shift 57
	.  error


state 8
	non_if_stmt : CONTINUE . END_STMT  (18)

	END_STMT  shift 58
	.  error


state 9
	non_if_stmt : RETURN . END_STMT  (19)

	END_STMT  shift 59
	.  error


state 10
	for_stmt : FOR . LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (78)

	LP  shift 60
	.  error


state 11
	factor : LP . arithmetic_op RP  (51)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	IDENTIFIER  shift 61
	.  error

	arithmetic_op  goto 62
	numeric_value  goto 46
	factor  goto 47


state 12
	non_if_stmt : END_STMT .  (22)

	.  reduce 22


state 13
	non_if_stmt : COMMENT .  (21)

	.  reduce 21


state 14
	input_stmt : INPUT . LP IDENTIFIER RP  (100)

	LP  shift 63
	.  error


state 15
	output_stmt : PRINT . LP IDENTIFIER RP  (102)

	LP  shift 64
	.  error


state 16
	read_from_sensor : READ_FROM_SENSOR . LP IDENTIFIER COMMA IDENTIFIER RP  (104)

	LP  shift 65
	.  error


state 17
	time_from_timer : TIME_FROM_TIMER . LP IDENTIFIER RP  (105)

	LP  shift 66
	.  error


state 18
	func_define : FUNC . SPACE IDENTIFIER LP parameters RP LB func_body RB  (25)

	SPACE  shift 67
	.  error


state 19
	var_type : INT_TYPE .  (35)

	.  reduce 35


state 20
	var_type : FLOAT_TYPE .  (36)

	.  reduce 36


state 21
	var_type : STRING_TYPE .  (37)

	.  reduce 37


state 22
	var_type : CHAR_TYPE .  (38)

	.  reduce 38


state 23
	var_type : BOOL_TYPE .  (39)

	.  reduce 39


state 24
	var_type : STATUS_TYPE .  (40)

	.  reduce 40


state 25
	var_type : PROTOCOL_TYPE .  (41)

	.  reduce 41


state 26
	func_call : IDENTIFIER . LP variables RP  (32)
	factor : IDENTIFIER .  (50)
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (54)
	int_assign : IDENTIFIER . ASSIGN_OP num_value  (62)
	float_assign : IDENTIFIER . ASSIGN_OP num_value  (63)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (64)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (65)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr  (66)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (67)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (68)
	connect_stmt : IDENTIFIER . DOT CONNECT_FUNC LP url RP  (107)

	LP  shift 68
	ASSIGN_OP  shift 69
	DOT  shift 70
	END_STMT  reduce 50
	DIV_OP  reduce 50
	MULT_OP  reduce 50
	PLUS_OP  reduce 50
	MINUS_OP  reduce 50


state 27
	program : PROG_START stmts . PROG_END  (1)

	PROG_END  shift 71
	.  error


state 28
	stmts : stmt .  (2)
	stmts : stmt . stmts  (3)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	RB  reduce 2
	PROG_END  reduce 2

	stmts  goto 72
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 31
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 29
	stmt : if_stmt .  (4)

	.  reduce 4


30: reduce/reduce conflict (reduce 5, reduce 74) on INT
30: reduce/reduce conflict (reduce 5, reduce 74) on FLOAT
30: reduce/reduce conflict (reduce 5, reduce 74) on WHILE
30: reduce/reduce conflict (reduce 5, reduce 74) on IF
30: reduce/reduce conflict (reduce 5, reduce 74) on BREAK
30: reduce/reduce conflict (reduce 5, reduce 74) on CONTINUE
30: reduce/reduce conflict (reduce 5, reduce 74) on RETURN
30: reduce/reduce conflict (reduce 5, reduce 74) on FOR
30: reduce/reduce conflict (reduce 5, reduce 74) on RB
30: reduce/reduce conflict (reduce 5, reduce 74) on LP
30: reduce/reduce conflict (reduce 5, reduce 74) on END_STMT
30: reduce/reduce conflict (reduce 5, reduce 74) on COMMENT
30: reduce/reduce conflict (reduce 5, reduce 74) on INPUT
30: reduce/reduce conflict (reduce 5, reduce 74) on PRINT
30: reduce/reduce conflict (reduce 5, reduce 74) on READ_FROM_SENSOR
30: reduce/reduce conflict (reduce 5, reduce 74) on TIME_FROM_TIMER
30: reduce/reduce conflict (reduce 5, reduce 74) on FUNC
30: reduce/reduce conflict (reduce 5, reduce 74) on INT_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on FLOAT_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on STRING_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on CHAR_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on BOOL_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on STATUS_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on PROTOCOL_TYPE
30: reduce/reduce conflict (reduce 5, reduce 74) on PROG_END
30: reduce/reduce conflict (reduce 5, reduce 74) on IDENTIFIER
state 30
	stmt : non_if_stmt .  (5)
	matched_stmt : non_if_stmt .  (74)

	.  reduce 5


state 31
	if_stmt : matched_stmt .  (6)

	.  reduce 6


state 32
	if_stmt : unmatched_stmt .  (7)

	.  reduce 7


state 33
	non_if_stmt : assign_stmt . END_STMT  (8)

	END_STMT  shift 73
	.  error


state 34
	non_if_stmt : input_stmt . END_STMT  (9)

	END_STMT  shift 74
	.  error


state 35
	non_if_stmt : output_stmt . END_STMT  (10)

	END_STMT  shift 75
	.  error


state 36
	non_if_stmt : func_define .  (11)

	.  reduce 11


state 37
	non_if_stmt : func_call . END_STMT  (12)

	END_STMT  shift 76
	.  error


state 38
	non_if_stmt : read_from_sensor . END_STMT  (13)

	END_STMT  shift 77
	.  error


state 39
	non_if_stmt : time_from_timer . END_STMT  (14)

	END_STMT  shift 78
	.  error


state 40
	non_if_stmt : connect_stmt . END_STMT  (15)

	END_STMT  shift 79
	.  error


state 41
	non_if_stmt : declare_stmt . END_STMT  (16)

	END_STMT  shift 80
	.  error


state 42
	non_if_stmt : arithmetic_op . END_STMT  (20)
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (43)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (44)

	END_STMT  shift 81
	PLUS_OP  shift 82
	MINUS_OP  shift 83
	.  error


state 43
	non_if_stmt : while_stmt .  (23)

	.  reduce 23


state 44
	non_if_stmt : for_stmt .  (24)

	.  reduce 24


state 45
	declare_stmt : var_type . SPACE IDENTIFIER  (52)
	declare_stmt : var_type . SPACE assign_stmt  (53)

	SPACE  shift 84
	.  error


state 46
	arithmetic_op : numeric_value .  (42)
	numeric_value : numeric_value . MULT_OP factor  (46)
	numeric_value : numeric_value . DIV_OP factor  (47)

	DIV_OP  shift 85
	MULT_OP  shift 86
	RP  reduce 42
	END_STMT  reduce 42
	NOT_EQ_OP  reduce 42
	EQUIVALENT_OP  reduce 42
	LESS_OP  reduce 42
	GREATER_OP  reduce 42
	LESS_EQ_OP  reduce 42
	GREATER_EQ_OP  reduce 42
	OR_OP  reduce 42
	PLUS_OP  reduce 42
	MINUS_OP  reduce 42


state 47
	numeric_value : factor .  (45)

	.  reduce 45


state 48
	assign_stmt : int_assign .  (55)

	.  reduce 55


state 49
	assign_stmt : float_assign .  (56)

	.  reduce 56


state 50
	assign_stmt : str_assign .  (57)

	.  reduce 57


state 51
	assign_stmt : char_assign .  (58)

	.  reduce 58


state 52
	assign_stmt : bool_assign .  (59)

	.  reduce 59


state 53
	assign_stmt : status_assign .  (60)

	.  reduce 60


state 54
	assign_stmt : protocol_assign .  (61)

	.  reduce 61


state 55
	while_stmt : WHILE LP . logic_expr RP LB stmts RB  (77)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 96
	logic_operation  goto 97
	comparison_operation  goto 98
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 56
	matched_stmt : IF LP . logic_expr RP LB matched_stmt RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP . logic_expr RP LB stmts RB  (75)
	unmatched_stmt : IF LP . logic_expr RP LB matched_stmt RB ELSE LB unmatched_stmt RB  (76)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 102
	logic_operation  goto 97
	comparison_operation  goto 98
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 57
	non_if_stmt : BREAK END_STMT .  (17)

	.  reduce 17


state 58
	non_if_stmt : CONTINUE END_STMT .  (18)

	.  reduce 18


state 59
	non_if_stmt : RETURN END_STMT .  (19)

	.  reduce 19


state 60
	for_stmt : FOR LP . declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (78)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	.  error

	declare_stmt  goto 103
	var_type  goto 45


state 61
	factor : IDENTIFIER .  (50)

	.  reduce 50


state 62
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (43)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (44)
	factor : LP arithmetic_op . RP  (51)

	RP  shift 104
	PLUS_OP  shift 82
	MINUS_OP  shift 83
	.  error


state 63
	input_stmt : INPUT LP . IDENTIFIER RP  (100)

	IDENTIFIER  shift 105
	.  error


state 64
	output_stmt : PRINT LP . IDENTIFIER RP  (102)

	IDENTIFIER  shift 106
	.  error


state 65
	read_from_sensor : READ_FROM_SENSOR LP . IDENTIFIER COMMA IDENTIFIER RP  (104)

	IDENTIFIER  shift 107
	.  error


state 66
	time_from_timer : TIME_FROM_TIMER LP . IDENTIFIER RP  (105)

	IDENTIFIER  shift 108
	.  error


state 67
	func_define : FUNC SPACE . IDENTIFIER LP parameters RP LB func_body RB  (25)

	IDENTIFIER  shift 109
	.  error


state 68
	func_call : IDENTIFIER LP . variables RP  (32)

	IDENTIFIER  shift 110
	.  error

	variables  goto 111


state 69
	assign_stmt : IDENTIFIER ASSIGN_OP . IDENTIFIER  (54)
	int_assign : IDENTIFIER ASSIGN_OP . num_value  (62)
	float_assign : IDENTIFIER ASSIGN_OP . num_value  (63)
	char_assign : IDENTIFIER ASSIGN_OP . CHAR  (64)
	str_assign : IDENTIFIER ASSIGN_OP . STRING  (65)
	bool_assign : IDENTIFIER ASSIGN_OP . logic_expr  (66)
	status_assign : IDENTIFIER ASSIGN_OP . STATUS  (67)
	protocol_assign : IDENTIFIER ASSIGN_OP . PROTOCOL  (68)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 112
	BOOL  shift 90
	STRING  shift 113
	STATUS  shift 114
	PROTOCOL  shift 115
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 116
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 117
	logic_expr  goto 118
	logic_operation  goto 97
	comparison_operation  goto 98
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 70
	connect_stmt : IDENTIFIER DOT . CONNECT_FUNC LP url RP  (107)

	CONNECT_FUNC  shift 119
	.  error


state 71
	program : PROG_START stmts PROG_END .  (1)

	.  reduce 1


state 72
	stmts : stmt stmts .  (3)

	.  reduce 3


state 73
	non_if_stmt : assign_stmt END_STMT .  (8)

	.  reduce 8


state 74
	non_if_stmt : input_stmt END_STMT .  (9)

	.  reduce 9


state 75
	non_if_stmt : output_stmt END_STMT .  (10)

	.  reduce 10


state 76
	non_if_stmt : func_call END_STMT .  (12)

	.  reduce 12


state 77
	non_if_stmt : read_from_sensor END_STMT .  (13)

	.  reduce 13


state 78
	non_if_stmt : time_from_timer END_STMT .  (14)

	.  reduce 14


state 79
	non_if_stmt : connect_stmt END_STMT .  (15)

	.  reduce 15


state 80
	non_if_stmt : declare_stmt END_STMT .  (16)

	.  reduce 16


state 81
	non_if_stmt : arithmetic_op END_STMT .  (20)

	.  reduce 20


state 82
	arithmetic_op : arithmetic_op PLUS_OP . numeric_value  (43)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	IDENTIFIER  shift 61
	.  error

	numeric_value  goto 120
	factor  goto 47


state 83
	arithmetic_op : arithmetic_op MINUS_OP . numeric_value  (44)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	IDENTIFIER  shift 61
	.  error

	numeric_value  goto 121
	factor  goto 47


state 84
	declare_stmt : var_type SPACE . IDENTIFIER  (52)
	declare_stmt : var_type SPACE . assign_stmt  (53)

	IDENTIFIER  shift 122
	.  error

	assign_stmt  goto 123
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 85
	numeric_value : numeric_value DIV_OP . factor  (47)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	IDENTIFIER  shift 61
	.  error

	factor  goto 124


state 86
	numeric_value : numeric_value MULT_OP . factor  (46)

	INT  shift 3
	FLOAT  shift 4
	LP  shift 11
	IDENTIFIER  shift 61
	.  error

	factor  goto 125


87: reduce/reduce conflict (reduce 48, reduce 69) on RP
87: reduce/reduce conflict (reduce 48, reduce 69) on END_STMT
87: reduce/reduce conflict (reduce 48, reduce 69) on NOT_EQ_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on EQUIVALENT_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on LESS_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on GREATER_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on LESS_EQ_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on GREATER_EQ_OP
87: reduce/reduce conflict (reduce 48, reduce 69) on OR_OP
state 87
	factor : INT .  (48)
	num_value : INT .  (69)

	.  reduce 48


88: reduce/reduce conflict (reduce 49, reduce 70) on RP
88: reduce/reduce conflict (reduce 49, reduce 70) on END_STMT
88: reduce/reduce conflict (reduce 49, reduce 70) on NOT_EQ_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on EQUIVALENT_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on LESS_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on GREATER_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on LESS_EQ_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on GREATER_EQ_OP
88: reduce/reduce conflict (reduce 49, reduce 70) on OR_OP
state 88
	factor : FLOAT .  (49)
	num_value : FLOAT .  (70)

	.  reduce 49


state 89
	num_value : CHAR .  (72)

	.  reduce 72


90: reduce/reduce conflict (reduce 79, reduce 87) on RP
90: reduce/reduce conflict (reduce 79, reduce 87) on END_STMT
90: reduce/reduce conflict (reduce 79, reduce 87) on OR_OP
state 90
	logic_expr : BOOL .  (79)
	bool_factor : BOOL .  (87)

	RP  reduce 79
	END_STMT  reduce 79
	OR_OP  reduce 79
	AND_OP  reduce 87


state 91
	factor : LP . arithmetic_op RP  (51)
	bool_factor : LP . comparison_operation RP  (89)
	bool_factor : LP . logic_operation RP  (90)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 126
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 127
	logic_operation  goto 128
	comparison_operation  goto 129
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 92
	logic_expr : NOT_OP . logic_expr  (82)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 130
	logic_operation  goto 97
	comparison_operation  goto 98
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


93: reduce/reduce conflict (reduce 50, reduce 88) on RP
93: reduce/reduce conflict (reduce 50, reduce 91) on NOT_EQ_OP
93: reduce/reduce conflict (reduce 50, reduce 91) on EQUIVALENT_OP
93: reduce/reduce conflict (reduce 50, reduce 91) on LESS_OP
93: reduce/reduce conflict (reduce 50, reduce 91) on GREATER_OP
93: reduce/reduce conflict (reduce 50, reduce 91) on LESS_EQ_OP
93: reduce/reduce conflict (reduce 50, reduce 91) on GREATER_EQ_OP
state 93
	factor : IDENTIFIER .  (50)
	bool_factor : IDENTIFIER .  (88)
	comparable : IDENTIFIER .  (91)

	RP  reduce 50
	END_STMT  reduce 88
	NOT_EQ_OP  reduce 50
	EQUIVALENT_OP  reduce 50
	LESS_OP  reduce 50
	GREATER_OP  reduce 50
	LESS_EQ_OP  reduce 50
	GREATER_EQ_OP  reduce 50
	OR_OP  reduce 88
	AND_OP  reduce 88
	DIV_OP  reduce 50
	MULT_OP  reduce 50
	PLUS_OP  reduce 50
	MINUS_OP  reduce 50


state 94
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (43)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (44)
	num_value : arithmetic_op .  (71)

	PLUS_OP  shift 82
	MINUS_OP  shift 83
	RP  reduce 71
	END_STMT  reduce 71
	NOT_EQ_OP  reduce 71
	EQUIVALENT_OP  reduce 71
	LESS_OP  reduce 71
	GREATER_OP  reduce 71
	LESS_EQ_OP  reduce 71
	GREATER_EQ_OP  reduce 71
	OR_OP  reduce 71


state 95
	comparable : num_value .  (92)

	.  reduce 92


state 96
	while_stmt : WHILE LP logic_expr . RP LB stmts RB  (77)
	logic_operation : logic_expr . OR_OP logic_value  (84)

	RP  shift 131
	OR_OP  shift 132
	.  error


state 97
	logic_expr : logic_operation .  (80)

	.  reduce 80


state 98
	logic_expr : comparison_operation .  (81)

	.  reduce 81


state 99
	logic_operation : logic_value .  (83)
	logic_value : logic_value . AND_OP bool_factor  (86)

	AND_OP  shift 133
	RP  reduce 83
	END_STMT  reduce 83
	OR_OP  reduce 83


state 100
	logic_value : bool_factor .  (85)

	.  reduce 85


state 101
	comparison_operation : comparable . comparision_op comparable  (93)

	NOT_EQ_OP  shift 134
	EQUIVALENT_OP  shift 135
	LESS_OP  shift 136
	GREATER_OP  shift 137
	LESS_EQ_OP  shift 138
	GREATER_EQ_OP  shift 139
	.  error

	comparision_op  goto 140


state 102
	matched_stmt : IF LP logic_expr . RP LB matched_stmt RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr . RP LB stmts RB  (75)
	unmatched_stmt : IF LP logic_expr . RP LB matched_stmt RB ELSE LB unmatched_stmt RB  (76)
	logic_operation : logic_expr . OR_OP logic_value  (84)

	RP  shift 141
	OR_OP  shift 132
	.  error


state 103
	for_stmt : FOR LP declare_stmt . END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB  (78)

	END_STMT  shift 142
	.  error


state 104
	factor : LP arithmetic_op RP .  (51)

	.  reduce 51


state 105
	input_stmt : INPUT LP IDENTIFIER . RP  (100)

	RP  shift 143
	.  error


state 106
	output_stmt : PRINT LP IDENTIFIER . RP  (102)

	RP  shift 144
	.  error


state 107
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER . COMMA IDENTIFIER RP  (104)

	COMMA  shift 145
	.  error


state 108
	time_from_timer : TIME_FROM_TIMER LP IDENTIFIER . RP  (105)

	RP  shift 146
	.  error


state 109
	func_define : FUNC SPACE IDENTIFIER . LP parameters RP LB func_body RB  (25)

	LP  shift 147
	.  error


state 110
	variables : IDENTIFIER .  (33)
	variables : IDENTIFIER . COMMA variables  (34)

	COMMA  shift 148
	RP  reduce 33


state 111
	func_call : IDENTIFIER LP variables . RP  (32)

	RP  shift 149
	.  error


112: reduce/reduce conflict (reduce 64, reduce 72) on RP
112: reduce/reduce conflict (reduce 64, reduce 72) on END_STMT
state 112
	char_assign : IDENTIFIER ASSIGN_OP CHAR .  (64)
	num_value : CHAR .  (72)

	RP  reduce 64
	END_STMT  reduce 64
	NOT_EQ_OP  reduce 72
	EQUIVALENT_OP  reduce 72
	LESS_OP  reduce 72
	GREATER_OP  reduce 72
	LESS_EQ_OP  reduce 72
	GREATER_EQ_OP  reduce 72


state 113
	str_assign : IDENTIFIER ASSIGN_OP STRING .  (65)

	.  reduce 65


state 114
	status_assign : IDENTIFIER ASSIGN_OP STATUS .  (67)

	.  reduce 67


state 115
	protocol_assign : IDENTIFIER ASSIGN_OP PROTOCOL .  (68)

	.  reduce 68


116: reduce/reduce conflict (reduce 50, reduce 54) on RP
116: reduce/reduce conflict (reduce 50, reduce 88) on RP
116: reduce/reduce conflict (reduce 50, reduce 54) on END_STMT
116: reduce/reduce conflict (reduce 50, reduce 88) on END_STMT
116: reduce/reduce conflict (reduce 50, reduce 91) on NOT_EQ_OP
116: reduce/reduce conflict (reduce 50, reduce 91) on EQUIVALENT_OP
116: reduce/reduce conflict (reduce 50, reduce 91) on LESS_OP
116: reduce/reduce conflict (reduce 50, reduce 91) on GREATER_OP
116: reduce/reduce conflict (reduce 50, reduce 91) on LESS_EQ_OP
116: reduce/reduce conflict (reduce 50, reduce 91) on GREATER_EQ_OP
state 116
	factor : IDENTIFIER .  (50)
	assign_stmt : IDENTIFIER ASSIGN_OP IDENTIFIER .  (54)
	bool_factor : IDENTIFIER .  (88)
	comparable : IDENTIFIER .  (91)

	RP  reduce 50
	END_STMT  reduce 50
	NOT_EQ_OP  reduce 50
	EQUIVALENT_OP  reduce 50
	LESS_OP  reduce 50
	GREATER_OP  reduce 50
	LESS_EQ_OP  reduce 50
	GREATER_EQ_OP  reduce 50
	OR_OP  reduce 88
	AND_OP  reduce 88
	DIV_OP  reduce 50
	MULT_OP  reduce 50
	PLUS_OP  reduce 50
	MINUS_OP  reduce 50


117: reduce/reduce conflict (reduce 62, reduce 63) on RP
117: reduce/reduce conflict (reduce 62, reduce 63) on END_STMT
state 117
	int_assign : IDENTIFIER ASSIGN_OP num_value .  (62)
	float_assign : IDENTIFIER ASSIGN_OP num_value .  (63)
	comparable : num_value .  (92)

	RP  reduce 62
	END_STMT  reduce 62
	NOT_EQ_OP  reduce 92
	EQUIVALENT_OP  reduce 92
	LESS_OP  reduce 92
	GREATER_OP  reduce 92
	LESS_EQ_OP  reduce 92
	GREATER_EQ_OP  reduce 92


state 118
	bool_assign : IDENTIFIER ASSIGN_OP logic_expr .  (66)
	logic_operation : logic_expr . OR_OP logic_value  (84)

	OR_OP  shift 132
	RP  reduce 66
	END_STMT  reduce 66


state 119
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC . LP url RP  (107)

	LP  shift 150
	.  error


state 120
	arithmetic_op : arithmetic_op PLUS_OP numeric_value .  (43)
	numeric_value : numeric_value . MULT_OP factor  (46)
	numeric_value : numeric_value . DIV_OP factor  (47)

	DIV_OP  shift 85
	MULT_OP  shift 86
	RP  reduce 43
	END_STMT  reduce 43
	NOT_EQ_OP  reduce 43
	EQUIVALENT_OP  reduce 43
	LESS_OP  reduce 43
	GREATER_OP  reduce 43
	LESS_EQ_OP  reduce 43
	GREATER_EQ_OP  reduce 43
	OR_OP  reduce 43
	PLUS_OP  reduce 43
	MINUS_OP  reduce 43


state 121
	arithmetic_op : arithmetic_op MINUS_OP numeric_value .  (44)
	numeric_value : numeric_value . MULT_OP factor  (46)
	numeric_value : numeric_value . DIV_OP factor  (47)

	DIV_OP  shift 85
	MULT_OP  shift 86
	RP  reduce 44
	END_STMT  reduce 44
	NOT_EQ_OP  reduce 44
	EQUIVALENT_OP  reduce 44
	LESS_OP  reduce 44
	GREATER_OP  reduce 44
	LESS_EQ_OP  reduce 44
	GREATER_EQ_OP  reduce 44
	OR_OP  reduce 44
	PLUS_OP  reduce 44
	MINUS_OP  reduce 44


state 122
	declare_stmt : var_type SPACE IDENTIFIER .  (52)
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (54)
	int_assign : IDENTIFIER . ASSIGN_OP num_value  (62)
	float_assign : IDENTIFIER . ASSIGN_OP num_value  (63)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (64)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (65)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr  (66)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (67)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (68)

	ASSIGN_OP  shift 69
	END_STMT  reduce 52


state 123
	declare_stmt : var_type SPACE assign_stmt .  (53)

	.  reduce 53


state 124
	numeric_value : numeric_value DIV_OP factor .  (47)

	.  reduce 47


state 125
	numeric_value : numeric_value MULT_OP factor .  (46)

	.  reduce 46


state 126
	arithmetic_op : arithmetic_op . PLUS_OP numeric_value  (43)
	arithmetic_op : arithmetic_op . MINUS_OP numeric_value  (44)
	factor : LP arithmetic_op . RP  (51)
	num_value : arithmetic_op .  (71)

	RP  shift 104
	PLUS_OP  shift 82
	MINUS_OP  shift 83
	NOT_EQ_OP  reduce 71
	EQUIVALENT_OP  reduce 71
	LESS_OP  reduce 71
	GREATER_OP  reduce 71
	LESS_EQ_OP  reduce 71
	GREATER_EQ_OP  reduce 71


state 127
	logic_operation : logic_expr . OR_OP logic_value  (84)

	OR_OP  shift 132
	.  error


state 128
	logic_expr : logic_operation .  (80)
	bool_factor : LP logic_operation . RP  (90)

	RP  shift 151
	OR_OP  reduce 80


state 129
	logic_expr : comparison_operation .  (81)
	bool_factor : LP comparison_operation . RP  (89)

	RP  shift 152
	OR_OP  reduce 81


130: shift/reduce conflict (shift 132, reduce 82) on OR_OP
state 130
	logic_expr : NOT_OP logic_expr .  (82)
	logic_operation : logic_expr . OR_OP logic_value  (84)

	OR_OP  shift 132
	RP  reduce 82
	END_STMT  reduce 82


state 131
	while_stmt : WHILE LP logic_expr RP . LB stmts RB  (77)

	LB  shift 153
	.  error


state 132
	logic_operation : logic_expr OR_OP . logic_value  (84)

	BOOL  shift 154
	LP  shift 155
	IDENTIFIER  shift 156
	.  error

	logic_value  goto 157
	bool_factor  goto 100


state 133
	logic_value : logic_value AND_OP . bool_factor  (86)

	BOOL  shift 154
	LP  shift 155
	IDENTIFIER  shift 156
	.  error

	bool_factor  goto 158


state 134
	comparision_op : NOT_EQ_OP .  (99)

	.  reduce 99


state 135
	comparision_op : EQUIVALENT_OP .  (96)

	.  reduce 96


state 136
	comparision_op : LESS_OP .  (94)

	.  reduce 94


state 137
	comparision_op : GREATER_OP .  (95)

	.  reduce 95


state 138
	comparision_op : LESS_EQ_OP .  (98)

	.  reduce 98


state 139
	comparision_op : GREATER_EQ_OP .  (97)

	.  reduce 97


state 140
	comparison_operation : comparable comparision_op . comparable  (93)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	LP  shift 11
	IDENTIFIER  shift 159
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	comparable  goto 160


state 141
	matched_stmt : IF LP logic_expr RP . LB matched_stmt RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP . LB stmts RB  (75)
	unmatched_stmt : IF LP logic_expr RP . LB matched_stmt RB ELSE LB unmatched_stmt RB  (76)

	LB  shift 161
	.  error


state 142
	for_stmt : FOR LP declare_stmt END_STMT . logic_expr END_STMT assign_stmt RP LB stmts RB  (78)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 162
	logic_operation  goto 97
	comparison_operation  goto 98
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 143
	input_stmt : INPUT LP IDENTIFIER RP .  (100)

	.  reduce 100


state 144
	output_stmt : PRINT LP IDENTIFIER RP .  (102)

	.  reduce 102


state 145
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA . IDENTIFIER RP  (104)

	IDENTIFIER  shift 163
	.  error


state 146
	time_from_timer : TIME_FROM_TIMER LP IDENTIFIER RP .  (105)

	.  reduce 105


147: shift/reduce conflict (shift 19, reduce 28) on INT_TYPE
147: shift/reduce conflict (shift 20, reduce 28) on FLOAT_TYPE
147: shift/reduce conflict (shift 21, reduce 28) on STRING_TYPE
147: shift/reduce conflict (shift 22, reduce 28) on CHAR_TYPE
147: shift/reduce conflict (shift 23, reduce 28) on BOOL_TYPE
147: shift/reduce conflict (shift 24, reduce 28) on STATUS_TYPE
147: shift/reduce conflict (shift 25, reduce 28) on PROTOCOL_TYPE
state 147
	func_define : FUNC SPACE IDENTIFIER LP . parameters RP LB func_body RB  (25)
	parameter : .  (28)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	RP  reduce 28

	parameters  goto 164
	parameter  goto 165
	var_type  goto 166


state 148
	variables : IDENTIFIER COMMA . variables  (34)

	IDENTIFIER  shift 110
	.  error

	variables  goto 167


state 149
	func_call : IDENTIFIER LP variables RP .  (32)

	.  reduce 32


state 150
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP . url RP  (107)

	STRING  shift 168
	.  error

	url  goto 169


state 151
	bool_factor : LP logic_operation RP .  (90)

	.  reduce 90


state 152
	bool_factor : LP comparison_operation RP .  (89)

	.  reduce 89


state 153
	while_stmt : WHILE LP logic_expr RP LB . stmts RB  (77)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 170
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 31
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 154
	bool_factor : BOOL .  (87)

	.  reduce 87


state 155
	bool_factor : LP . comparison_operation RP  (89)
	bool_factor : LP . logic_operation RP  (90)

	INT  shift 87
	FLOAT  shift 88
	CHAR  shift 89
	BOOL  shift 90
	LP  shift 91
	NOT_OP  shift 92
	IDENTIFIER  shift 93
	.  error

	arithmetic_op  goto 94
	numeric_value  goto 46
	factor  goto 47
	num_value  goto 95
	logic_expr  goto 127
	logic_operation  goto 128
	comparison_operation  goto 129
	logic_value  goto 99
	bool_factor  goto 100
	comparable  goto 101


state 156
	bool_factor : IDENTIFIER .  (88)

	.  reduce 88


state 157
	logic_operation : logic_expr OR_OP logic_value .  (84)
	logic_value : logic_value . AND_OP bool_factor  (86)

	AND_OP  shift 133
	RP  reduce 84
	END_STMT  reduce 84
	OR_OP  reduce 84


state 158
	logic_value : logic_value AND_OP bool_factor .  (86)

	.  reduce 86


159: reduce/reduce conflict (reduce 50, reduce 91) on RP
159: reduce/reduce conflict (reduce 50, reduce 91) on END_STMT
159: reduce/reduce conflict (reduce 50, reduce 91) on OR_OP
state 159
	factor : IDENTIFIER .  (50)
	comparable : IDENTIFIER .  (91)

	.  reduce 50


state 160
	comparison_operation : comparable comparision_op comparable .  (93)

	.  reduce 93


state 161
	matched_stmt : IF LP logic_expr RP LB . matched_stmt RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP LB . stmts RB  (75)
	unmatched_stmt : IF LP logic_expr RP LB . matched_stmt RB ELSE LB unmatched_stmt RB  (76)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 171
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 172
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 162
	for_stmt : FOR LP declare_stmt END_STMT logic_expr . END_STMT assign_stmt RP LB stmts RB  (78)
	logic_operation : logic_expr . OR_OP logic_value  (84)

	END_STMT  shift 173
	OR_OP  shift 132
	.  error


state 163
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER . RP  (104)

	RP  shift 174
	.  error


state 164
	func_define : FUNC SPACE IDENTIFIER LP parameters . RP LB func_body RB  (25)

	RP  shift 175
	.  error


165: reduce/reduce conflict (reduce 26, reduce 28) on RP
165: shift/reduce conflict (shift 19, reduce 28) on INT_TYPE
165: shift/reduce conflict (shift 20, reduce 28) on FLOAT_TYPE
165: shift/reduce conflict (shift 21, reduce 28) on STRING_TYPE
165: shift/reduce conflict (shift 22, reduce 28) on CHAR_TYPE
165: shift/reduce conflict (shift 23, reduce 28) on BOOL_TYPE
165: shift/reduce conflict (shift 24, reduce 28) on STATUS_TYPE
165: shift/reduce conflict (shift 25, reduce 28) on PROTOCOL_TYPE
state 165
	parameters : parameter .  (26)
	parameters : parameter . parameters  (27)
	parameter : .  (28)

	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	RP  reduce 26

	parameters  goto 176
	parameter  goto 165
	var_type  goto 166


state 166
	parameter : var_type . SPACE IDENTIFIER  (29)

	SPACE  shift 177
	.  error


state 167
	variables : IDENTIFIER COMMA variables .  (34)

	.  reduce 34


state 168
	url : STRING .  (108)

	.  reduce 108


state 169
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url . RP  (107)

	RP  shift 178
	.  error


state 170
	while_stmt : WHILE LP logic_expr RP LB stmts . RB  (77)

	RB  shift 179
	.  error


state 171
	unmatched_stmt : IF LP logic_expr RP LB stmts . RB  (75)

	RB  shift 180
	.  error


172: shift/reduce conflict (shift 181, reduce 6) on RB
state 172
	if_stmt : matched_stmt .  (6)
	matched_stmt : IF LP logic_expr RP LB matched_stmt . RB ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt . RB ELSE LB unmatched_stmt RB  (76)

	RB  shift 181
	INT  reduce 6
	FLOAT  reduce 6
	WHILE  reduce 6
	IF  reduce 6
	BREAK  reduce 6
	CONTINUE  reduce 6
	RETURN  reduce 6
	FOR  reduce 6
	LP  reduce 6
	END_STMT  reduce 6
	COMMENT  reduce 6
	INPUT  reduce 6
	PRINT  reduce 6
	READ_FROM_SENSOR  reduce 6
	TIME_FROM_TIMER  reduce 6
	FUNC  reduce 6
	INT_TYPE  reduce 6
	FLOAT_TYPE  reduce 6
	STRING_TYPE  reduce 6
	CHAR_TYPE  reduce 6
	BOOL_TYPE  reduce 6
	STATUS_TYPE  reduce 6
	PROTOCOL_TYPE  reduce 6
	IDENTIFIER  reduce 6


state 173
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT . assign_stmt RP LB stmts RB  (78)

	IDENTIFIER  shift 182
	.  error

	assign_stmt  goto 183
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 174
	read_from_sensor : READ_FROM_SENSOR LP IDENTIFIER COMMA IDENTIFIER RP .  (104)

	.  reduce 104


state 175
	func_define : FUNC SPACE IDENTIFIER LP parameters RP . LB func_body RB  (25)

	LB  shift 184
	.  error


state 176
	parameters : parameter parameters .  (27)

	.  reduce 27


state 177
	parameter : var_type SPACE . IDENTIFIER  (29)

	IDENTIFIER  shift 185
	.  error


state 178
	connect_stmt : IDENTIFIER DOT CONNECT_FUNC LP url RP .  (107)

	.  reduce 107


state 179
	while_stmt : WHILE LP logic_expr RP LB stmts RB .  (77)

	.  reduce 77


state 180
	unmatched_stmt : IF LP logic_expr RP LB stmts RB .  (75)

	.  reduce 75


state 181
	matched_stmt : IF LP logic_expr RP LB matched_stmt RB . ELSE LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt RB . ELSE LB unmatched_stmt RB  (76)

	ELSE  shift 186
	.  error


state 182
	assign_stmt : IDENTIFIER . ASSIGN_OP IDENTIFIER  (54)
	int_assign : IDENTIFIER . ASSIGN_OP num_value  (62)
	float_assign : IDENTIFIER . ASSIGN_OP num_value  (63)
	char_assign : IDENTIFIER . ASSIGN_OP CHAR  (64)
	str_assign : IDENTIFIER . ASSIGN_OP STRING  (65)
	bool_assign : IDENTIFIER . ASSIGN_OP logic_expr  (66)
	status_assign : IDENTIFIER . ASSIGN_OP STATUS  (67)
	protocol_assign : IDENTIFIER . ASSIGN_OP PROTOCOL  (68)

	ASSIGN_OP  shift 69
	.  error


state 183
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt . RP LB stmts RB  (78)

	RP  shift 187
	.  error


state 184
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB . func_body RB  (25)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 188
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 189
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 31
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	func_body  goto 190
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 185
	parameter : var_type SPACE IDENTIFIER .  (29)

	.  reduce 29


state 186
	matched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE . LB matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE . LB unmatched_stmt RB  (76)

	LB  shift 191
	.  error


state 187
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP . LB stmts RB  (78)

	LB  shift 192
	.  error


state 188
	non_if_stmt : RETURN . END_STMT  (19)
	func_body : RETURN . END_STMT  (30)

	END_STMT  shift 193
	.  error


state 189
	func_body : stmts .  (31)

	.  reduce 31


state 190
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB func_body . RB  (25)

	RB  shift 194
	.  error


state 191
	matched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB . matched_stmt RB  (73)
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB . unmatched_stmt RB  (76)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	non_if_stmt  goto 195
	matched_stmt  goto 196
	unmatched_stmt  goto 197
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


state 192
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB . stmts RB  (78)

	INT  shift 3
	FLOAT  shift 4
	WHILE  shift 5
	IF  shift 6
	BREAK  shift 7
	CONTINUE  shift 8
	RETURN  shift 9
	FOR  shift 10
	LP  shift 11
	END_STMT  shift 12
	COMMENT  shift 13
	INPUT  shift 14
	PRINT  shift 15
	READ_FROM_SENSOR  shift 16
	TIME_FROM_TIMER  shift 17
	FUNC  shift 18
	INT_TYPE  shift 19
	FLOAT_TYPE  shift 20
	STRING_TYPE  shift 21
	CHAR_TYPE  shift 22
	BOOL_TYPE  shift 23
	STATUS_TYPE  shift 24
	PROTOCOL_TYPE  shift 25
	IDENTIFIER  shift 26
	.  error

	stmts  goto 198
	stmt  goto 28
	if_stmt  goto 29
	non_if_stmt  goto 30
	matched_stmt  goto 31
	unmatched_stmt  goto 32
	assign_stmt  goto 33
	input_stmt  goto 34
	output_stmt  goto 35
	func_define  goto 36
	func_call  goto 37
	read_from_sensor  goto 38
	time_from_timer  goto 39
	connect_stmt  goto 40
	declare_stmt  goto 41
	arithmetic_op  goto 42
	while_stmt  goto 43
	for_stmt  goto 44
	var_type  goto 45
	numeric_value  goto 46
	factor  goto 47
	int_assign  goto 48
	float_assign  goto 49
	str_assign  goto 50
	char_assign  goto 51
	bool_assign  goto 52
	status_assign  goto 53
	protocol_assign  goto 54


193: reduce/reduce conflict (reduce 19, reduce 30) on RB
state 193
	non_if_stmt : RETURN END_STMT .  (19)
	func_body : RETURN END_STMT .  (30)

	.  reduce 19


state 194
	func_define : FUNC SPACE IDENTIFIER LP parameters RP LB func_body RB .  (25)

	.  reduce 25


state 195
	matched_stmt : non_if_stmt .  (74)

	.  reduce 74


state 196
	matched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB matched_stmt . RB  (73)

	RB  shift 199
	.  error


state 197
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB unmatched_stmt . RB  (76)

	RB  shift 200
	.  error


state 198
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts . RB  (78)

	RB  shift 201
	.  error


state 199
	matched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB matched_stmt RB .  (73)

	.  reduce 73


state 200
	unmatched_stmt : IF LP logic_expr RP LB matched_stmt RB ELSE LB unmatched_stmt RB .  (76)

	.  reduce 76


state 201
	for_stmt : FOR LP declare_stmt END_STMT logic_expr END_STMT assign_stmt RP LB stmts RB .  (78)

	.  reduce 78


Rules never reduced:
	func_body : RETURN END_STMT  (30)
	assign_stmt : IDENTIFIER ASSIGN_OP IDENTIFIER  (54)
	float_assign : IDENTIFIER ASSIGN_OP num_value  (63)
	num_value : INT  (69)
	num_value : FLOAT  (70)
	comparable : IDENTIFIER  (91)
	input_from_connection : IDENTIFIER DOT INPUT_FROM_CONNECTION LP IDENTIFIER RP  (101)
	output_to_connection : IDENTIFIER DOT OUTPUT_TO_CONNECTION LP IDENTIFIER RP  (103)
	connect_obj_creation : CONNECTION_CLASS SPACE IDENTIFIER ASSIGN_OP NEW_INST SPACE CONNECTION_CONSTRUCTOR  (106)
	get_connect_status : IDENTIFIER DOT GET_STATUS_FUNC LP IDENTIFIER RP  (109)
	get_connect_protocol : IDENTIFIER DOT GET_PROTOCOL_FUNC LP IDENTIFIER RP  (110)
	get_connect_URL : IDENTIFIER DOT GET_URL_FUNC LP IDENTIFIER RP  (111)
	turn_switch_on : TURN_SWITCH_ON_FUNC LP SWITCH_NAME RP  (112)
	turn_switch_off : TURN_SWITCH_OFF_FUNC LP SWITCH_NAME RP  (113)
	toggle_switch : TOGGLE_SWITCH_FUNC LP SWITCH_NAME RP  (114)
	get_switch_state : GET_SWITCH_STATE_FUNC LP SWITCH_NAME COMMA IDENTIFIER RP  (115)


State 30 contains 26 reduce/reduce conflicts.
State 87 contains 9 reduce/reduce conflicts.
State 88 contains 9 reduce/reduce conflicts.
State 90 contains 3 reduce/reduce conflicts.
State 93 contains 7 reduce/reduce conflicts.
State 112 contains 2 reduce/reduce conflicts.
State 116 contains 10 reduce/reduce conflicts.
State 117 contains 2 reduce/reduce conflicts.
State 130 contains 1 shift/reduce conflict.
State 147 contains 7 shift/reduce conflicts.
State 159 contains 3 reduce/reduce conflicts.
State 165 contains 7 shift/reduce conflicts, 1 reduce/reduce conflict.
State 172 contains 1 shift/reduce conflict.
State 193 contains 1 reduce/reduce conflict.


68 terminals, 53 nonterminals
116 grammar rules, 202 states
